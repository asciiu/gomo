// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/notification/notification.proto

/*
Package ios is a generated protocol buffer package.

It is generated from these files:
	proto/notification/notification.proto

It has these top-level messages:
	EmailRequest
	CreateTemplateRequest
	DeleteTemplateRequest
	ActivityRequest
	RecentActivityRequest
	ActivityCountRequest
	UpdateActivityRequest
	EmailResponse
	Activity
	UserActivityPage
	ActivityPagedResponse
	ActivityData
	ActivityResponse
	ActivityList
	ActivityListResponse
	ActivityCount
	ActivityCountResponse
*/
package ios

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Requests
type EmailRequest struct {
	EmailSender    string `protobuf:"bytes,1,opt,name=emailSender" json:"emailSender,omitempty"`
	EmailRecipient string `protobuf:"bytes,2,opt,name=emailRecipient" json:"emailRecipient,omitempty"`
	Subject        string `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	HtmlBody       string `protobuf:"bytes,4,opt,name=htmlBody" json:"htmlBody,omitempty"`
	TextBody       string `protobuf:"bytes,5,opt,name=textBody" json:"textBody,omitempty"`
}

func (m *EmailRequest) Reset()                    { *m = EmailRequest{} }
func (m *EmailRequest) String() string            { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()               {}
func (*EmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EmailRequest) GetEmailSender() string {
	if m != nil {
		return m.EmailSender
	}
	return ""
}

func (m *EmailRequest) GetEmailRecipient() string {
	if m != nil {
		return m.EmailRecipient
	}
	return ""
}

func (m *EmailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailRequest) GetHtmlBody() string {
	if m != nil {
		return m.HtmlBody
	}
	return ""
}

func (m *EmailRequest) GetTextBody() string {
	if m != nil {
		return m.TextBody
	}
	return ""
}

type CreateTemplateRequest struct {
	TemplateName string `protobuf:"bytes,1,opt,name=templateName" json:"templateName,omitempty"`
	Subject      string `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	Html         string `protobuf:"bytes,3,opt,name=html" json:"html,omitempty"`
	Text         string `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
}

func (m *CreateTemplateRequest) Reset()                    { *m = CreateTemplateRequest{} }
func (m *CreateTemplateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTemplateRequest) ProtoMessage()               {}
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateTemplateRequest) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *CreateTemplateRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CreateTemplateRequest) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *CreateTemplateRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type DeleteTemplateRequest struct {
	TemplateName string `protobuf:"bytes,1,opt,name=templateName" json:"templateName,omitempty"`
}

func (m *DeleteTemplateRequest) Reset()                    { *m = DeleteTemplateRequest{} }
func (m *DeleteTemplateRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTemplateRequest) ProtoMessage()               {}
func (*DeleteTemplateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteTemplateRequest) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

type ActivityRequest struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	ObjectID string `protobuf:"bytes,2,opt,name=objectID" json:"objectID,omitempty"`
	Page     uint32 `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	PageSize uint32 `protobuf:"varint,4,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (m *ActivityRequest) Reset()                    { *m = ActivityRequest{} }
func (m *ActivityRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivityRequest) ProtoMessage()               {}
func (*ActivityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ActivityRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ActivityRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *ActivityRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ActivityRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type RecentActivityRequest struct {
	ObjectID string `protobuf:"bytes,1,opt,name=objectID" json:"objectID,omitempty"`
	Count    uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *RecentActivityRequest) Reset()                    { *m = RecentActivityRequest{} }
func (m *RecentActivityRequest) String() string            { return proto.CompactTextString(m) }
func (*RecentActivityRequest) ProtoMessage()               {}
func (*RecentActivityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RecentActivityRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *RecentActivityRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ActivityCountRequest struct {
	ObjectID string `protobuf:"bytes,1,opt,name=objectID" json:"objectID,omitempty"`
}

func (m *ActivityCountRequest) Reset()                    { *m = ActivityCountRequest{} }
func (m *ActivityCountRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivityCountRequest) ProtoMessage()               {}
func (*ActivityCountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ActivityCountRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

type UpdateActivityRequest struct {
	ActivityID string `protobuf:"bytes,1,opt,name=activityID" json:"activityID,omitempty"`
	SeenAt     string `protobuf:"bytes,2,opt,name=seenAt" json:"seenAt,omitempty"`
	ClickedAt  string `protobuf:"bytes,3,opt,name=clickedAt" json:"clickedAt,omitempty"`
}

func (m *UpdateActivityRequest) Reset()                    { *m = UpdateActivityRequest{} }
func (m *UpdateActivityRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateActivityRequest) ProtoMessage()               {}
func (*UpdateActivityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateActivityRequest) GetActivityID() string {
	if m != nil {
		return m.ActivityID
	}
	return ""
}

func (m *UpdateActivityRequest) GetSeenAt() string {
	if m != nil {
		return m.SeenAt
	}
	return ""
}

func (m *UpdateActivityRequest) GetClickedAt() string {
	if m != nil {
		return m.ClickedAt
	}
	return ""
}

// Responses
type EmailResponse struct {
	Status  string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *EmailResponse) Reset()                    { *m = EmailResponse{} }
func (m *EmailResponse) String() string            { return proto.CompactTextString(m) }
func (*EmailResponse) ProtoMessage()               {}
func (*EmailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *EmailResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EmailResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Activity struct {
	ActivityID  string `protobuf:"bytes,1,opt,name=activityID" json:"activityID,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	ObjectID    string `protobuf:"bytes,4,opt,name=objectID" json:"objectID,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Subtitle    string `protobuf:"bytes,6,opt,name=subtitle" json:"subtitle,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	Details     string `protobuf:"bytes,8,opt,name=details" json:"details,omitempty"`
	Timestamp   string `protobuf:"bytes,9,opt,name=timestamp" json:"timestamp,omitempty"`
	ClickedAt   string `protobuf:"bytes,10,opt,name=clickedAt" json:"clickedAt,omitempty"`
	SeenAt      string `protobuf:"bytes,11,opt,name=seenAt" json:"seenAt,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Activity) GetActivityID() string {
	if m != nil {
		return m.ActivityID
	}
	return ""
}

func (m *Activity) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Activity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Activity) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *Activity) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Activity) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *Activity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Activity) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Activity) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Activity) GetClickedAt() string {
	if m != nil {
		return m.ClickedAt
	}
	return ""
}

func (m *Activity) GetSeenAt() string {
	if m != nil {
		return m.SeenAt
	}
	return ""
}

type UserActivityPage struct {
	Page     uint32      `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	PageSize uint32      `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
	Total    uint32      `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Activity []*Activity `protobuf:"bytes,4,rep,name=activity" json:"activity,omitempty"`
}

func (m *UserActivityPage) Reset()                    { *m = UserActivityPage{} }
func (m *UserActivityPage) String() string            { return proto.CompactTextString(m) }
func (*UserActivityPage) ProtoMessage()               {}
func (*UserActivityPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UserActivityPage) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserActivityPage) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *UserActivityPage) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserActivityPage) GetActivity() []*Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

type ActivityPagedResponse struct {
	Status  string            `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserActivityPage `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ActivityPagedResponse) Reset()                    { *m = ActivityPagedResponse{} }
func (m *ActivityPagedResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivityPagedResponse) ProtoMessage()               {}
func (*ActivityPagedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ActivityPagedResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityPagedResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ActivityPagedResponse) GetData() *UserActivityPage {
	if m != nil {
		return m.Data
	}
	return nil
}

type ActivityData struct {
	Activity *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
}

func (m *ActivityData) Reset()                    { *m = ActivityData{} }
func (m *ActivityData) String() string            { return proto.CompactTextString(m) }
func (*ActivityData) ProtoMessage()               {}
func (*ActivityData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ActivityData) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

type ActivityResponse struct {
	Status  string        `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *ActivityData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ActivityResponse) Reset()                    { *m = ActivityResponse{} }
func (m *ActivityResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivityResponse) ProtoMessage()               {}
func (*ActivityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ActivityResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ActivityResponse) GetData() *ActivityData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ActivityList struct {
	Activity []*Activity `protobuf:"bytes,1,rep,name=activity" json:"activity,omitempty"`
}

func (m *ActivityList) Reset()                    { *m = ActivityList{} }
func (m *ActivityList) String() string            { return proto.CompactTextString(m) }
func (*ActivityList) ProtoMessage()               {}
func (*ActivityList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ActivityList) GetActivity() []*Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

type ActivityListResponse struct {
	Status  string        `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *ActivityList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ActivityListResponse) Reset()                    { *m = ActivityListResponse{} }
func (m *ActivityListResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivityListResponse) ProtoMessage()               {}
func (*ActivityListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ActivityListResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ActivityListResponse) GetData() *ActivityList {
	if m != nil {
		return m.Data
	}
	return nil
}

type ActivityCount struct {
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *ActivityCount) Reset()                    { *m = ActivityCount{} }
func (m *ActivityCount) String() string            { return proto.CompactTextString(m) }
func (*ActivityCount) ProtoMessage()               {}
func (*ActivityCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ActivityCount) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ActivityCountResponse struct {
	Status  string         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *ActivityCount `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ActivityCountResponse) Reset()                    { *m = ActivityCountResponse{} }
func (m *ActivityCountResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivityCountResponse) ProtoMessage()               {}
func (*ActivityCountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ActivityCountResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityCountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ActivityCountResponse) GetData() *ActivityCount {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*EmailRequest)(nil), "ios.EmailRequest")
	proto.RegisterType((*CreateTemplateRequest)(nil), "ios.CreateTemplateRequest")
	proto.RegisterType((*DeleteTemplateRequest)(nil), "ios.DeleteTemplateRequest")
	proto.RegisterType((*ActivityRequest)(nil), "ios.ActivityRequest")
	proto.RegisterType((*RecentActivityRequest)(nil), "ios.RecentActivityRequest")
	proto.RegisterType((*ActivityCountRequest)(nil), "ios.ActivityCountRequest")
	proto.RegisterType((*UpdateActivityRequest)(nil), "ios.UpdateActivityRequest")
	proto.RegisterType((*EmailResponse)(nil), "ios.EmailResponse")
	proto.RegisterType((*Activity)(nil), "ios.Activity")
	proto.RegisterType((*UserActivityPage)(nil), "ios.UserActivityPage")
	proto.RegisterType((*ActivityPagedResponse)(nil), "ios.ActivityPagedResponse")
	proto.RegisterType((*ActivityData)(nil), "ios.ActivityData")
	proto.RegisterType((*ActivityResponse)(nil), "ios.ActivityResponse")
	proto.RegisterType((*ActivityList)(nil), "ios.ActivityList")
	proto.RegisterType((*ActivityListResponse)(nil), "ios.ActivityListResponse")
	proto.RegisterType((*ActivityCount)(nil), "ios.ActivityCount")
	proto.RegisterType((*ActivityCountResponse)(nil), "ios.ActivityCountResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Notification service

type NotificationClient interface {
	FindUserActivity(ctx context.Context, in *ActivityRequest, opts ...client.CallOption) (*ActivityPagedResponse, error)
	FindMostRecentActivity(ctx context.Context, in *RecentActivityRequest, opts ...client.CallOption) (*ActivityListResponse, error)
	FindActivityCount(ctx context.Context, in *ActivityCountRequest, opts ...client.CallOption) (*ActivityCountResponse, error)
	UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...client.CallOption) (*ActivityResponse, error)
	// email stuffs
	SendEmail(ctx context.Context, in *EmailRequest, opts ...client.CallOption) (*EmailResponse, error)
	CreateTemplate(ctx context.Context, in *CreateTemplateRequest, opts ...client.CallOption) (*EmailResponse, error)
	DeleteTemplate(ctx context.Context, in *DeleteTemplateRequest, opts ...client.CallOption) (*EmailResponse, error)
}

type notificationClient struct {
	c           client.Client
	serviceName string
}

func NewNotificationClient(serviceName string, c client.Client) NotificationClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "ios"
	}
	return &notificationClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *notificationClient) FindUserActivity(ctx context.Context, in *ActivityRequest, opts ...client.CallOption) (*ActivityPagedResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.FindUserActivity", in)
	out := new(ActivityPagedResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) FindMostRecentActivity(ctx context.Context, in *RecentActivityRequest, opts ...client.CallOption) (*ActivityListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.FindMostRecentActivity", in)
	out := new(ActivityListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) FindActivityCount(ctx context.Context, in *ActivityCountRequest, opts ...client.CallOption) (*ActivityCountResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.FindActivityCount", in)
	out := new(ActivityCountResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...client.CallOption) (*ActivityResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.UpdateActivity", in)
	out := new(ActivityResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) SendEmail(ctx context.Context, in *EmailRequest, opts ...client.CallOption) (*EmailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.SendEmail", in)
	out := new(EmailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) CreateTemplate(ctx context.Context, in *CreateTemplateRequest, opts ...client.CallOption) (*EmailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.CreateTemplate", in)
	out := new(EmailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) DeleteTemplate(ctx context.Context, in *DeleteTemplateRequest, opts ...client.CallOption) (*EmailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Notification.DeleteTemplate", in)
	out := new(EmailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Notification service

type NotificationHandler interface {
	FindUserActivity(context.Context, *ActivityRequest, *ActivityPagedResponse) error
	FindMostRecentActivity(context.Context, *RecentActivityRequest, *ActivityListResponse) error
	FindActivityCount(context.Context, *ActivityCountRequest, *ActivityCountResponse) error
	UpdateActivity(context.Context, *UpdateActivityRequest, *ActivityResponse) error
	// email stuffs
	SendEmail(context.Context, *EmailRequest, *EmailResponse) error
	CreateTemplate(context.Context, *CreateTemplateRequest, *EmailResponse) error
	DeleteTemplate(context.Context, *DeleteTemplateRequest, *EmailResponse) error
}

func RegisterNotificationHandler(s server.Server, hdlr NotificationHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Notification{hdlr}, opts...))
}

type Notification struct {
	NotificationHandler
}

func (h *Notification) FindUserActivity(ctx context.Context, in *ActivityRequest, out *ActivityPagedResponse) error {
	return h.NotificationHandler.FindUserActivity(ctx, in, out)
}

func (h *Notification) FindMostRecentActivity(ctx context.Context, in *RecentActivityRequest, out *ActivityListResponse) error {
	return h.NotificationHandler.FindMostRecentActivity(ctx, in, out)
}

func (h *Notification) FindActivityCount(ctx context.Context, in *ActivityCountRequest, out *ActivityCountResponse) error {
	return h.NotificationHandler.FindActivityCount(ctx, in, out)
}

func (h *Notification) UpdateActivity(ctx context.Context, in *UpdateActivityRequest, out *ActivityResponse) error {
	return h.NotificationHandler.UpdateActivity(ctx, in, out)
}

func (h *Notification) SendEmail(ctx context.Context, in *EmailRequest, out *EmailResponse) error {
	return h.NotificationHandler.SendEmail(ctx, in, out)
}

func (h *Notification) CreateTemplate(ctx context.Context, in *CreateTemplateRequest, out *EmailResponse) error {
	return h.NotificationHandler.CreateTemplate(ctx, in, out)
}

func (h *Notification) DeleteTemplate(ctx context.Context, in *DeleteTemplateRequest, out *EmailResponse) error {
	return h.NotificationHandler.DeleteTemplate(ctx, in, out)
}

func init() { proto.RegisterFile("proto/notification/notification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5d, 0x4f, 0xe3, 0x46,
	0x14, 0xc5, 0x49, 0x80, 0xe4, 0x26, 0xa1, 0x30, 0x22, 0xc8, 0x44, 0x55, 0x85, 0x46, 0x02, 0xc1,
	0x0b, 0x95, 0xd2, 0xbe, 0x54, 0x7d, 0x0a, 0x04, 0x24, 0x24, 0x8a, 0xda, 0x50, 0x7e, 0xc0, 0x60,
	0xdf, 0x76, 0x67, 0xf1, 0x17, 0x99, 0xc9, 0x6a, 0x59, 0x69, 0x9f, 0xf6, 0xdf, 0xec, 0xf3, 0xfe,
	0xbc, 0x7d, 0x58, 0xcd, 0x97, 0xe3, 0x31, 0x61, 0x85, 0x22, 0xed, 0x93, 0x7d, 0xee, 0xf8, 0xde,
	0x7b, 0x7c, 0xe6, 0xcc, 0xb5, 0xe1, 0xb0, 0x98, 0xe5, 0x32, 0xff, 0x35, 0xcb, 0x25, 0xff, 0x8f,
	0x47, 0x4c, 0xf2, 0x3c, 0xf3, 0xc0, 0xa9, 0x5e, 0x27, 0x4d, 0x9e, 0x0b, 0xfa, 0x39, 0x80, 0xde,
	0x45, 0xca, 0x78, 0x32, 0xc5, 0xc7, 0x39, 0x0a, 0x49, 0x0e, 0xa0, 0x8b, 0x0a, 0xdf, 0x62, 0x16,
	0xe3, 0x2c, 0x0c, 0x0e, 0x82, 0xe3, 0xce, 0xb4, 0x1a, 0x22, 0x47, 0xb0, 0x85, 0x26, 0x23, 0xe2,
	0x05, 0xc7, 0x4c, 0x86, 0x0d, 0xfd, 0x50, 0x2d, 0x4a, 0x42, 0xd8, 0x14, 0xf3, 0xfb, 0xb7, 0x18,
	0xc9, 0xb0, 0xa9, 0x1f, 0x70, 0x90, 0x0c, 0xa1, 0xfd, 0x46, 0xa6, 0xc9, 0x59, 0x1e, 0x3f, 0x85,
	0x2d, 0xbd, 0x54, 0x62, 0xb5, 0x26, 0xf1, 0xbd, 0xd4, 0x6b, 0xeb, 0x66, 0xcd, 0x61, 0xfa, 0x11,
	0x06, 0xe7, 0x33, 0x64, 0x12, 0xff, 0xc5, 0xb4, 0x48, 0x98, 0x44, 0x47, 0x9a, 0x42, 0x4f, 0xda,
	0xd0, 0x0d, 0x4b, 0xd1, 0xb2, 0xf6, 0x62, 0x55, 0x3a, 0x0d, 0x9f, 0x0e, 0x81, 0x96, 0x6a, 0x6f,
	0x59, 0xea, 0x7b, 0x15, 0x53, 0x6d, 0x2d, 0x3d, 0x7d, 0x4f, 0xff, 0x84, 0xc1, 0x04, 0x13, 0x5c,
	0xa9, 0x3d, 0x9d, 0xc3, 0x4f, 0xe3, 0x48, 0xf2, 0x77, 0x5c, 0x3e, 0xb9, 0xb4, 0x3d, 0xd8, 0x98,
	0x0b, 0x9c, 0x5d, 0x4d, 0x6c, 0x82, 0x45, 0x4a, 0x82, 0x5c, 0x33, 0xbb, 0x9a, 0x58, 0xaa, 0x25,
	0x56, 0xbc, 0x0a, 0xf6, 0x3f, 0x6a, 0xae, 0xfd, 0xa9, 0xbe, 0x57, 0xcf, 0xab, 0xeb, 0x2d, 0xff,
	0x80, 0x9a, 0x6f, 0x7f, 0x5a, 0x62, 0x7a, 0x05, 0x83, 0x29, 0x46, 0x98, 0xc9, 0x7a, 0xf3, 0x6a,
	0x93, 0xa0, 0xd6, 0x64, 0x17, 0xd6, 0xa3, 0x7c, 0x6e, 0x37, 0xb6, 0x3f, 0x35, 0x80, 0x8e, 0x60,
	0xd7, 0x15, 0x39, 0x57, 0x81, 0x57, 0x54, 0xa2, 0x29, 0x0c, 0xee, 0x8a, 0x98, 0x49, 0xac, 0xb7,
	0xff, 0x05, 0x80, 0xd9, 0x50, 0x99, 0x56, 0x89, 0x28, 0x6d, 0x04, 0x62, 0x36, 0x76, 0x9b, 0x65,
	0x11, 0xf9, 0x19, 0x3a, 0x51, 0xc2, 0xa3, 0x07, 0x8c, 0xc7, 0xce, 0x56, 0x8b, 0x00, 0x1d, 0x43,
	0xdf, 0x9a, 0x59, 0x14, 0x79, 0x26, 0x50, 0x97, 0x91, 0x4c, 0xce, 0x85, 0x93, 0xd8, 0x20, 0x65,
	0x86, 0x14, 0x85, 0x50, 0x4a, 0x5a, 0x33, 0x58, 0x48, 0xbf, 0x34, 0xa0, 0xed, 0xc8, 0xbe, 0x86,
	0xa5, 0xdd, 0xc1, 0xa6, 0xb7, 0x83, 0xca, 0x3d, 0x4f, 0x85, 0xab, 0xad, 0xef, 0x3d, 0x99, 0x5a,
	0xcf, 0x05, 0x97, 0x5c, 0x26, 0x68, 0x1d, 0x6f, 0x80, 0xca, 0x10, 0xf3, 0x7b, 0xb3, 0xb0, 0x61,
	0x32, 0x1c, 0x56, 0xc7, 0x34, 0x46, 0x11, 0xcd, 0x78, 0xa1, 0x4e, 0x74, 0xb8, 0x69, 0x8e, 0x69,
	0x25, 0xa4, 0x5e, 0x31, 0x46, 0xc9, 0x78, 0x22, 0xc2, 0xb6, 0x79, 0x45, 0x0b, 0x95, 0x86, 0x92,
	0xa7, 0x28, 0x24, 0x4b, 0x8b, 0xb0, 0x63, 0x34, 0x2c, 0x03, 0xbe, 0xc2, 0x50, 0x53, 0xb8, 0xb2,
	0x2f, 0xdd, 0xea, 0xbe, 0xd0, 0x4f, 0x01, 0x6c, 0xdf, 0x09, 0x9c, 0x39, 0xe9, 0xfe, 0x56, 0xc6,
	0x74, 0x66, 0x0d, 0x5e, 0x30, 0x6b, 0xc3, 0x37, 0xab, 0x96, 0x21, 0x97, 0x2c, 0xb1, 0xee, 0x36,
	0x80, 0x9c, 0x40, 0xdb, 0x49, 0x1e, 0xb6, 0x0e, 0x9a, 0xc7, 0xdd, 0x51, 0xff, 0x94, 0xe7, 0xe2,
	0xb4, 0xb4, 0x54, 0xb9, 0x4c, 0x25, 0x0c, 0xaa, 0x04, 0xe2, 0xd5, 0x7d, 0x40, 0x4e, 0xa0, 0x15,
	0x33, 0xc9, 0x34, 0x95, 0xee, 0x68, 0xa0, 0x3b, 0xd6, 0x5f, 0x70, 0xaa, 0x1f, 0xa1, 0x7f, 0x40,
	0xcf, 0x45, 0x27, 0x4c, 0x32, 0x8f, 0x70, 0xa0, 0xd3, 0x5f, 0x24, 0xfc, 0x00, 0xdb, 0x8b, 0x93,
	0xb1, 0x32, 0xd7, 0x43, 0x8f, 0xeb, 0x8e, 0xd7, 0x4c, 0x31, 0x7a, 0xce, 0xf3, 0x9a, 0x0b, 0x59,
	0xe3, 0xf9, 0x5d, 0x61, 0xf3, 0xc5, 0xd9, 0x57, 0xa9, 0x3f, 0x88, 0xab, 0x2e, 0x6d, 0xb8, 0x1e,
	0x42, 0xdf, 0x1b, 0x36, 0x8b, 0x99, 0x14, 0x54, 0x67, 0xd2, 0xe3, 0x62, 0xc3, 0xed, 0x4c, 0x5a,
	0x99, 0xd8, 0x91, 0x47, 0x8c, 0x78, 0xc4, 0x4c, 0x6d, 0xbd, 0x3e, 0xfa, 0xda, 0x84, 0xde, 0x4d,
	0xe5, 0x6b, 0x4a, 0x2e, 0x61, 0xfb, 0x92, 0x67, 0x71, 0xd5, 0x1c, 0x64, 0xd7, 0x17, 0xd2, 0x0c,
	0xbd, 0xe1, 0xd0, 0x8b, 0x7a, 0x0e, 0xa5, 0x6b, 0xe4, 0x1f, 0xd8, 0x53, 0x75, 0xfe, 0xca, 0x95,
	0xbe, 0xd5, 0x91, 0x4d, 0x4c, 0xde, 0xd2, 0x39, 0x3e, 0xdc, 0x7f, 0xae, 0xe0, 0xa2, 0xe4, 0x35,
	0xec, 0xa8, 0x92, 0xbe, 0x92, 0xfb, 0x4b, 0x5e, 0x6d, 0x29, 0x41, 0x4f, 0x51, 0xba, 0x46, 0x2e,
	0x60, 0xcb, 0x1f, 0xe6, 0x96, 0xd8, 0xd2, 0x09, 0x3f, 0x1c, 0xd4, 0x24, 0x28, 0xcb, 0xfc, 0x0e,
	0x1d, 0xf5, 0x27, 0xa1, 0x07, 0x35, 0x31, 0x06, 0xa8, 0xfe, 0x81, 0x0c, 0x49, 0x35, 0x54, 0x66,
	0x9d, 0xc1, 0x96, 0xff, 0xed, 0xb7, 0xcd, 0x97, 0xfe, 0x10, 0xbc, 0x5c, 0xc3, 0xff, 0x80, 0xdb,
	0x1a, 0x4b, 0xbf, 0xea, 0xcb, 0x6b, 0xdc, 0x6f, 0xe8, 0x9f, 0xa7, 0xdf, 0xbe, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x1b, 0x5e, 0x11, 0x09, 0x65, 0x09, 0x00, 0x00,
}
